# ============================================================================
# Stage 1: Builder - Install dependencies with build tools
# ============================================================================
FROM python:3.11-slim AS builder

WORKDIR /build

# Install build dependencies (only in builder stage)
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy full requirements (needed for batch processing)
COPY requirements.txt .

# Install Python dependencies to user directory
RUN pip install --user --no-cache-dir -r requirements.txt


# ============================================================================
# Stage 2: Runtime - Minimal production image
# ============================================================================
FROM python:3.11-slim

# Cache bust - force rebuild (change this value to force cache invalidation)
ARG CACHEBUST=20251011-v2

WORKDIR /app

# Install only runtime dependencies (no build tools!)
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Make sure scripts in .local are usable
ENV PATH=/root/.local/bin:$PATH

# Copy only necessary application files
COPY api_server.py .
COPY vermont_news_analyzer/ vermont_news_analyzer/

# Create necessary directories
RUN mkdir -p vermont_news_analyzer/logs vermont_news_analyzer/data/cache

# Railway provides PORT env var - use it
ENV PORT=8000
EXPOSE $PORT

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl --fail http://localhost:${PORT}/api/health || exit 1

# Run FastAPI server (Railway will set PORT dynamically)
CMD uvicorn api_server:app --host 0.0.0.0 --port ${PORT}
