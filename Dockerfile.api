# ============================================================================
# Stage 1: Builder - Install dependencies with build tools
# ============================================================================
FROM python:3.11-slim AS builder

WORKDIR /build

# Install build dependencies (only in builder stage)
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy minimal API requirements
COPY requirements.api.txt .

# Install Python dependencies to user directory
RUN pip install --user --no-cache-dir -r requirements.api.txt


# ============================================================================
# Stage 2: Runtime - Minimal production image
# ============================================================================
FROM python:3.11-slim

WORKDIR /app

# Install only runtime dependencies (no build tools!)
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Make sure scripts in .local are usable
ENV PATH=/root/.local/bin:$PATH

# Copy only necessary application files
COPY api_server.py .
COPY vermont_news_analyzer/modules/database.py vermont_news_analyzer/modules/database.py

# Create necessary directories and minimal __init__.py files
RUN mkdir -p vermont_news_analyzer/modules vermont_news_analyzer/logs && \
    echo '"""Vermont News Analyzer - API Server"""' > vermont_news_analyzer/__init__.py && \
    echo '__version__ = "2.0.0"' >> vermont_news_analyzer/__init__.py && \
    echo '"""Database module"""' > vermont_news_analyzer/modules/__init__.py

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl --fail http://localhost:8000/api/health || exit 1

# Run FastAPI server
CMD ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000"]
