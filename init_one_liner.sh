python3 -c "import psycopg2,os;c=psycopg2.connect(os.getenv('DATABASE_URL'));print('Connected');r=c.cursor();r.execute(\"CREATE TABLE IF NOT EXISTS articles(id SERIAL PRIMARY KEY,article_hash VARCHAR(64) UNIQUE NOT NULL,title TEXT NOT NULL,url TEXT UNIQUE NOT NULL,content TEXT,summary TEXT,source VARCHAR(255),author VARCHAR(255),published_date TIMESTAMP,collected_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,processed_date TIMESTAMP,processing_status VARCHAR(50) DEFAULT 'pending',processing_error TEXT);CREATE INDEX IF NOT EXISTS idx_articles_published ON articles(published_date);CREATE INDEX IF NOT EXISTS idx_articles_source ON articles(source);CREATE INDEX IF NOT EXISTS idx_articles_status ON articles(processing_status);CREATE TABLE IF NOT EXISTS extraction_results(id SERIAL PRIMARY KEY,article_id INTEGER REFERENCES articles(id) ON DELETE CASCADE,consensus_summary TEXT,had_conflicts BOOLEAN,used_arbitration BOOLEAN,spacy_entity_count INTEGER,spacy_precision FLOAT,spacy_recall FLOAT,spacy_f1_score FLOAT,extracted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,total_processing_time_seconds FLOAT,CONSTRAINT extraction_results_article_unique UNIQUE(article_id));CREATE TABLE IF NOT EXISTS facts(id SERIAL PRIMARY KEY,article_id INTEGER REFERENCES articles(id) ON DELETE CASCADE,extraction_result_id INTEGER REFERENCES extraction_results(id) ON DELETE CASCADE,entity TEXT NOT NULL,entity_type VARCHAR(50),event_description TEXT,confidence FLOAT,source_models TEXT[],wikidata_id VARCHAR(50),wikidata_label TEXT,wikidata_description TEXT,wikidata_properties JSONB,created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);CREATE INDEX IF NOT EXISTS idx_facts_article ON facts(article_id);CREATE TABLE IF NOT EXISTS entity_relationships(id SERIAL PRIMARY KEY,article_id INTEGER REFERENCES articles(id) ON DELETE CASCADE,entity_a TEXT NOT NULL,entity_b TEXT NOT NULL,relationship_type VARCHAR(100),relationship_description TEXT,confidence FLOAT,created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,CONSTRAINT unique_relationship UNIQUE(article_id,entity_a,entity_b,relationship_type));CREATE TABLE IF NOT EXISTS api_costs(id SERIAL PRIMARY KEY,article_id INTEGER REFERENCES articles(id) ON DELETE SET NULL,api_provider VARCHAR(50),model VARCHAR(100),operation_type VARCHAR(100),input_tokens INTEGER,output_tokens INTEGER,total_tokens INTEGER,cost FLOAT,timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP);CREATE INDEX IF NOT EXISTS idx_costs_timestamp ON api_costs(timestamp);CREATE TABLE IF NOT EXISTS corpus_topics(id SERIAL PRIMARY KEY,topic_id INTEGER,topic_label TEXT,keywords TEXT[],article_count INTEGER,computed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,CONSTRAINT unique_topic UNIQUE(topic_id,computed_at));CREATE TABLE IF NOT EXISTS article_topics(id SERIAL PRIMARY KEY,article_id INTEGER REFERENCES articles(id) ON DELETE CASCADE,topic_id INTEGER,probability FLOAT,CONSTRAINT unique_article_topic UNIQUE(article_id,topic_id))\");c.commit();print('âœ… All tables created!');r.execute('SELECT table_name FROM information_schema.tables WHERE table_schema=\\'public\\' ORDER BY table_name');print('Tables:',', '.join([t[0] for t in r.fetchall()]));c.close()"
